{"version":3,"sources":["Item.js","App.js","serviceWorker.js","index.js"],"names":["Item","props","id","item","states","baseUrl","items","setItems","forceUpdate","useState","name","setName","price","setPrice","colors","setColors","sizes","setSizes","edit","updateEdit","React","updateState","forceUpdate2","useCallback","removeItem","temp","splice","its","setItem","toggleEdit","length","className","style","visibility","onClick","left","alt","src","lpad","value","onChange","e","target","toLocaleString","s","startsWith","substring","val","parseInt","replace","App","setBaseUrl","header","setHeader","downloadFile","filename","file","element","document","createElement","f","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","renderItems","i","item1","push","item2","onClickBtn2","a","window","scrollTo","zip","JSZip","frames","getElementsByClassName","html2canvas","allowTaint","useCORS","letterRendering","width","height","scale","scrollX","scrollY","canvas","img","toDataURL","split","folder","base64","idx","head","console","log","r","j","iid","htmlFile","html","generateAsync","then","blob","url","urls","addItem","map","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"mSA+KeA,MA5Kf,SAAcC,GAAQ,IACbC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KADQ,GAG+BC,EAFvBH,EAAVG,UAERC,EAHU,EAGVA,QAASC,EAHC,EAGDA,MAAOC,EAHN,EAGMA,SAAUC,EAHhB,EAGgBA,YAHhB,EAKOC,mBAASN,EAAKO,MALrB,mBAKVA,EALU,KAKJC,EALI,OAMSF,mBAASN,EAAKS,OANvB,mBAMVA,EANU,KAMHC,EANG,OAOWJ,mBAASN,EAAKW,QAPzB,mBAOVA,EAPU,KAOFC,EAPE,OAQSN,mBAASN,EAAKa,OARvB,mBAQVA,EARU,KAQHC,EARG,OAUUR,oBAAS,GAVnB,mBAUVS,EAVU,KAUJC,EAVI,OAYOC,IAAMX,WAArBY,EAZQ,oBAaXC,EAAeC,uBAAY,kBAAMF,EAAY,MAAK,IAElDG,EAAa,WACf,IAAMC,EAAI,YAAOnB,GACjBmB,EAAKC,OAAOxB,EAAG,EAAG,GAClBK,GAAS,SAAAoB,GAAG,OAAIF,KAChBG,IACAN,KASEO,EAAa,WACfV,GAAYD,IAGVU,EAAU,WACT1B,GAAMI,EAAMwB,SAGf3B,EAAOG,EAAMJ,GACbS,EAAQR,EAAKO,MACbG,EAASV,EAAKS,OACdG,EAAUZ,EAAKW,QACfG,EAASd,EAAKa,SAqElB,OAAGE,EAEK,yBAAKa,UAAU,aACX,4BAAQA,UAAU,MAAMC,MAAO,CAACC,WAAY,WAAWC,QAASL,GAAhE,gBACA,4BAAQE,UAAU,MAAMC,MAAO,CAACC,WAAY,UAAWE,KAAM,QAASD,QAASV,GAA/E,gBACA,yBAAKO,UAAU,SACX,yBAAKA,UAAU,eAAf,sBAAiC,6BAAjC,8CAA8C,6BAA9C,mCACA,yBAAKA,UAAU,SAASK,IAAK1B,EAAM2B,IAAKhC,EAAQ,QAAD,OAASH,EAAT,aAAwBgC,QAASL,IAChF,yBAAKE,UAAU,QACX,wBAAIA,UAAU,UAAd,UACA,wBAAIA,UAAU,SAAS7B,EAAGoC,KAAK,EAAG,MAClC,2BAAOP,UAAU,UAAUQ,MAAO7B,EAAM8B,SApEvC,SAACC,GAClB9B,EAAQ8B,EAAEC,OAAOH,OACjBjC,EAAMJ,EAAG,GAAK,CACVQ,KAAM+B,EAAEC,OAAOH,MACf3B,MAAOA,EACPE,OAAQA,EACRE,MAAOA,GAEXT,EAASD,GACTE,IACAc,OA2DgB,yBAAKS,UAAU,eACX,wBAAIA,UAAU,oBAAd,SACA,2BAAOA,UAAU,kBAAkBQ,MAAOzB,EAAQ0B,SA3DpD,SAACC,GACnB1B,EAAU0B,EAAEC,OAAOH,OACnBjC,EAAMJ,EAAG,GAAK,CACVQ,KAAMA,EACNE,MAAOA,EACPE,OAAQ2B,EAAEC,OAAOH,MACjBvB,MAAOA,GAEXT,EAASD,GACTE,IACAc,QAmDgB,yBAAKS,UAAU,eACX,wBAAIA,UAAU,oBAAd,QACA,2BAAOA,UAAU,kBAAkBQ,MAAOvB,EAAOwB,SAnDpD,SAACC,GAClBxB,EAASwB,EAAEC,OAAOH,OAClBjC,EAAMJ,EAAG,GAAK,CACVQ,KAAMA,EACNE,MAAOA,EACPE,OAAQA,EACRE,MAAOyB,EAAEC,OAAOH,OAEpBhC,EAASD,GACTE,IACAc,QA2CgB,yBAAKS,UAAU,mBACX,wBAAIA,UAAU,aAAd,UAA6BnB,EAAM,KAAO+B,kBAC1C,wBAAIZ,UAAU,MAAd,OACA,2BAAOA,UAAU,QAAQQ,MAAO,SAAK3B,EAAO+B,iBAAkBH,SA5ChE,SAACC,GACnB,IAAIG,EAAIH,EAAEC,OAAOH,MACdK,EAAEd,QAAU,IAAGc,EAAI,WACnBA,EAAEC,WAAW,YAAMD,EAAIA,EAAEE,UAAU,EAAGF,EAAEd,SAC3C,IAAMiB,EAAMC,SAASJ,EAAEK,QAAQ,MAAO,KACtCpC,EAASkC,GACTzC,EAAMJ,EAAG,GAAK,CACVQ,KAAMA,EACNE,MAAOmC,EACPjC,OAAQA,EACRE,MAAOA,GAEXT,EAASD,GACTE,IACAc,WAuCI,yBAAKS,UAAU,aACX,4BAAQA,UAAU,MAAMG,QAASL,GAAjC,gBACA,4BAAQE,UAAU,MAAMC,MAAO,CAACG,KAAM,QAASD,QAASV,GAAxD,gBACA,yBAAKO,UAAU,SACX,yBAAKA,UAAU,eAAf,sBAAiC,6BAAjC,8CAA8C,6BAA9C,mCACA,yBAAKA,UAAU,SAASK,IAAK1B,EAAM2B,IAAKhC,EAAQ,QAAD,OAASH,EAAT,aAAwBgC,QAASL,IAChF,yBAAKE,UAAU,QACX,wBAAIA,UAAU,UAAd,UACA,wBAAIA,UAAU,SAAS7B,EAAGoC,KAAK,EAAG,MAClC,wBAAIP,UAAU,WAAWrB,GACzB,yBAAKqB,UAAU,eACX,wBAAIA,UAAU,oBAAd,SACA,wBAAIA,UAAU,mBAAmBjB,IAErC,yBAAKiB,UAAU,eACX,wBAAIA,UAAU,oBAAd,QACA,wBAAIA,UAAU,mBAAmBf,IAErC,yBAAKe,UAAU,mBACX,wBAAIA,UAAU,aAAd,UAA6BnB,EAAM,KAAO+B,kBAC1C,wBAAIZ,UAAU,MAAd,OACA,wBAAIA,UAAU,SAAS,SAAKnB,EAAO+B,uB,OC6EhDO,MA7Of,WA4BE,IA5Bc,IAAD,EAEiBzC,mBAAS,2CAF1B,mBAENJ,EAFM,KAEG8C,EAFH,OAGa1C,mBAAS,IAHtB,mBAGNH,EAHM,KAGCC,EAHD,OAIWa,IAAMX,WAArBY,EAJI,sBAKeD,IAAMX,SAAS,gDAL9B,mBAKN2C,EALM,KAKEC,EALF,KAMP7C,EAAce,uBAAY,kBAAMF,EAAY,MAAK,IAEjDjB,EAAS,WACb,MAAO,CACLC,QAASA,EACTC,MAAOA,EACPC,SAAUA,EACVC,YAAaA,IAIX8C,EAAe,SAACC,EAAUC,GAC9B,IAAMC,EAAUC,SAASC,cAAc,KACjCC,EAAI,IAAIC,KAAK,CAACL,GAAO,CAACM,KAAM,eAClCL,EAAQM,KAAOC,IAAIC,gBAAgBL,GACnCH,EAAQS,SAAWX,EACnBG,SAASS,KAAKC,YAAYX,GAC1BA,EAAQY,SAGJC,EAAc,GAEZC,EAAI,EAAEA,EAAEjE,EAAMwB,OAAOyC,GAAG,EAAG,CACjC,GAAGA,EAAE,GAAKjE,EAAMwB,OAAQ,CACtB,IAAM0C,EAAQlE,EAAMiE,GACpBD,EAAYG,KAAK,CAACD,IAClB,MAEF,IAAMA,EAAQlE,EAAMiE,GACdG,EAAQpE,EAAMiE,EAAE,GACtBD,EAAYG,KAAK,CAACD,EAAOE,IAG3B,IAyBMC,EAAW,uCAAG,4DAAAC,EAAA,sDAClBC,OAAOC,SAAS,EAAE,GACZC,EAAM,IAAIC,IACVC,EAASvB,SAASwB,uBAAuB,SACtCX,EAAE,EAJO,YAILA,EAAEU,EAAOnD,QAJJ,wBAKVW,EAAIwC,EAAOV,GALD,SAMKY,IAAY1C,EAC/B,CACA2C,YAAY,EACVC,SAAS,EACTC,gBAAiB,EACjBC,MAAO,IACPC,OAAQ,IACRC,MAAO,MACPC,QAAS,EACTC,QAAS,IAfG,OAMVC,EANU,OAkBVC,EAAMD,EAAOE,UAAU,cAAcC,MAAM,WAAW,GAC5DhB,EAAIiB,OAAO,QAAQxC,KAAnB,cAA+Be,EAAE,EAAjC,QAA0CsB,EAAK,CAACI,QAAQ,IAnBxC,QAIW1B,IAJX,uBAgFF,IAAU2B,KA1DpBC,EAtBY,qwCAwEM/C,EAxEN,mQAgFe9C,EACTH,EAAOG,EAAM4F,GAEnBE,QAAQC,IAAR,UAAeH,EAAf,aAAuB/F,EAAKO,KAA5B,aAAqCP,EAAKS,MAA1C,aAAoDT,EAAKW,OAAzD,aAAoEX,EAAKa,QAGvF,IADImD,EAAO,GACHI,EAAI,EAAEA,EAAED,EAAYxC,OAAOyC,IAAK,CAGtC,IAFM+B,EAAIhC,EAAYC,GACtBJ,GAAQ,OACAoC,EAAI,EAAEA,EAAED,EAAExE,OAAOyE,IACjBC,EAAM,EAAEjC,EAAEgC,EAAE,EAClBpC,GAAQ,OACF1B,EAAI6D,EAAEC,GACZpC,GAAI,0KAEI9D,EAFJ,qBAEwBmG,EAFxB,uOAKOnG,EALP,qBAK2BmG,EAL3B,gCAOJrC,GAAQ,QAEFsC,EAbsB,oOAmBfhE,EAAE/B,KAnBa,oTA6BZL,EA7BY,gBA6BGmG,EA7BH,0CA6BwC/D,EAAE/B,KA7B1C,gDAgC5BqE,EAAIiB,OAAO,QAAQxC,KAAnB,cAA+BgD,EAA/B,SAA2CC,GAG9B,GAAZH,EAAExE,SACHqC,GAAQ,aAEVA,GAAQ,QA/HI,8EAwIZuC,EAAOP,EAAKhC,EAxIA,8EAyIlBY,EAAIvB,KAAJ,YAAsBkD,GAEtB3B,EAAI4B,cAAc,CAAC7C,KAAM,SACxB8C,MAAK,SAACC,GACLvD,EAAa,aAAcuD,MA7IX,4CAAH,qDAkJb3G,EAAK,EACT,OACE,6BACE,yBAAK6B,UAAU,UACjB,uBAAGA,UAAU,OAAb,gCACA,2BAAOA,UAAU,UAAUQ,MAAOlC,EAASmC,SAjKpB,SAACC,GACxBU,EAAWV,EAAEC,OAAOH,OAEpB,IAAIuE,EAAMrE,EAAEC,OAAOH,MACfwE,EAAOD,EAAIf,MAAM,KACrBe,EAAMA,EAAI7D,QAAQ8D,EAAKA,EAAKjF,OAAO,GAAI,IAEvCuB,EADkByD,EAAI,uBA4JtB,4BAAQ/E,UAAU,MAAMG,QA5KP,YALH,SAAC/B,GACfI,EAAS,GAAD,mBAAKD,GAAL,CAAYH,KAWpB6G,CANa,CACXtG,KAAM,GACNE,MAAO,EACPE,OAAQ,GACRE,MAAO,OAuKT,gBACE,4BAAQe,UAAU,WAAWG,QAASyC,GAAtC,6BAEA,gCACA,+BAEIL,EAAY2C,KACV,SAACX,GACC,OAAO,4BACNA,EAAEW,KAAI,SAAAxE,GAAC,OAAI,4BAAI,kBAAC,EAAD,CAAMvC,KAAMA,EAAIC,KAAMsC,EAAGrC,OAAQA,gBC3N3C8G,QACW,cAA7BrC,OAAOsC,SAASC,UAEe,UAA7BvC,OAAOsC,SAASC,UAEhBvC,OAAOsC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF9D,SAAS+D,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhB,MAAK,SAAAiB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5B,QAAQ4B,MAAMA,EAAMC,a","file":"static/js/main.cc36cb75.chunk.js","sourcesContent":["import React, {useState, useCallback} from 'react';\nimport './Item.css';\n\nfunction Item(props) {\n    let {id, item, states} = props;\n\n    const {baseUrl, items, setItems, forceUpdate} = states();\n\n    const [name, setName] = useState(item.name);\n    const [price, setPrice] = useState(item.price);\n    const [colors, setColors] = useState(item.colors);\n    const [sizes, setSizes] = useState(item.sizes);\n\n    const [edit, updateEdit] = useState(true);\n\n    const [, updateState] = React.useState();\n    const forceUpdate2 = useCallback(() => updateState({}), []);\n\n    const removeItem = () => {\n        const temp = [...items];\n        temp.splice(id-1, 1);\n        setItems(its => temp);\n        setItem();\n        forceUpdate2();\n    }\n\n    const openDetail = (href) => {\n        return ()=>{\n            window.open(href, '', 'width=800, height=10000, scrollbars, resizable, toolbar=no');\n        }\n    }\n\n    const toggleEdit = () => {\n        updateEdit(!edit);\n    }\n\n    const setItem = () => {\n        if(id >= items.length) {\n            return;\n        }\n        item = items[id];\n        setName(item.name);\n        setPrice(item.price);\n        setColors(item.colors);\n        setSizes(item.sizes);\n    }\n\n    const getItem = () => {\n        return {\n            name: name,\n            price: price,\n            colors: colors,\n            sizes: sizes\n        }\n    }\n\n    const onNameChange = (e) => {\n        setName(e.target.value);\n        items[id-1] = {\n            name: e.target.value,\n            price: price,\n            colors: colors,\n            sizes: sizes\n        };\n        setItems(items);\n        forceUpdate();\n        forceUpdate2();\n    }\n    const onColorChange = (e) => {\n        setColors(e.target.value);\n        items[id-1] = {\n            name: name,\n            price: price,\n            colors: e.target.value,\n            sizes: sizes\n        };\n        setItems(items);\n        forceUpdate();\n        forceUpdate2();\n    }\n    const onSizeChange = (e) => {\n        setSizes(e.target.value);\n        items[id-1] = {\n            name: name,\n            price: price,\n            colors: colors,\n            sizes: e.target.value\n        };\n        setItems(items);\n        forceUpdate();\n        forceUpdate2();\n    }\n    const onPriceChange = (e) => {\n        let s = e.target.value;\n        if(s.length <= 1) s = '￦0';\n        if(s.startsWith('￦')) s = s.substring(1, s.length);\n        const val = parseInt(s.replace(/,/gi, ''));\n        setPrice(val);\n        items[id-1] = {\n            name: name,\n            price: val,\n            colors: colors,\n            sizes: sizes\n        };\n        setItems(items);\n        forceUpdate();\n        forceUpdate2();\n    }\n\n    const test = () => {\n        forceUpdate();\n        forceUpdate2();\n    }\n    if(edit) {\n        return (\n            <div className=\"container\">\n                <button className=\"btn\" style={{visibility: 'visible'}}onClick={toggleEdit}>완료</button>\n                <button className=\"btn\" style={{visibility: 'visible', left: \"50px\"}} onClick={removeItem}>삭제</button>\n                <div className=\"frame\">\n                    <div className=\"show_detail\">클릭 시<br/>상품 상세정보가<br/>나타납니다.</div>\n                    <img className=\"imgbox\" alt={name} src={baseUrl+`/item${id}/main.png`} onClick={toggleEdit}/>\n                    <div className=\"info\">\n                        <h2 className=\"option\">OPTION</h2>\n                        <h2 className=\"order\">{id.lpad(3, '0')}</h2>\n                        <input className=\"item_nm\" value={name} onChange={onNameChange}></input>\n                        <div className=\"item_option\">\n                            <h4 className=\"item_option_type\">COLOR</h4>\n                            <input className=\"item_option_val\" value={colors} onChange={onColorChange}></input>\n                        </div>\n                        <div className=\"item_option\">\n                            <h4 className=\"item_option_type\">SIZE</h4>\n                            <input className=\"item_option_val\" value={sizes} onChange={onSizeChange}></input>\n                        </div> \n                        <div className=\"price_container\">\n                            <h3 className=\"old_price\">￦{(price+10000).toLocaleString()}</h3>\n                            <h3 className=\"to\"> > </h3>\n                            <input className=\"price\" value={'￦'+(price).toLocaleString()} onChange={onPriceChange}></input>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className=\"container\">\n                <button className=\"btn\" onClick={toggleEdit}>수정</button>\n                <button className=\"btn\" style={{left: \"50px\"}} onClick={removeItem}>삭제</button>\n                <div className=\"frame\">\n                    <div className=\"show_detail\">클릭 시<br/>상품 상세정보가<br/>나타납니다.</div>\n                    <img className=\"imgbox\" alt={name} src={baseUrl+`/item${id}/main.png`} onClick={toggleEdit}/>\n                    <div className=\"info\">\n                        <h2 className=\"option\">OPTION</h2>\n                        <h2 className=\"order\">{id.lpad(3, '0')}</h2>\n                        <h3 className=\"item_nm\">{name}</h3>\n                        <div className=\"item_option\">\n                            <h4 className=\"item_option_type\">COLOR</h4>\n                            <h4 className=\"item_option_val\">{colors}</h4>\n                        </div>\n                        <div className=\"item_option\">\n                            <h4 className=\"item_option_type\">SIZE</h4>\n                            <h4 className=\"item_option_val\">{sizes}</h4>\n                        </div> \n                        <div className=\"price_container\">\n                            <h3 className=\"old_price\">￦{(price+10000).toLocaleString()}</h3>\n                            <h3 className=\"to\"> > </h3>\n                            <h3 className=\"price\">{'￦'+(price).toLocaleString()}</h3>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Item;","import React, { useState, useCallback } from 'react';\nimport JSZip from 'jszip';\nimport html2canvas from 'html2canvas'; \nimport Item from './Item';\nimport './App.css';\n\nfunction App() {\n\n  const [baseUrl, setBaseUrl] = useState('http://ai.esmplus.com/jin465/summer_set'); // 기본 주소\n  const [items, setItems] = useState([]);\n  const [, updateState] = React.useState();\n  const [header, setHeader] = React.useState('http://ai.esmplus.com/jin465/information.png');\n  const forceUpdate = useCallback(() => updateState({}), []);\n\n  const states = () => {\n    return {\n      baseUrl: baseUrl,\n      items: items,\n      setItems: setItems,\n      forceUpdate: forceUpdate\n    }\n  }\n\n  const downloadFile = (filename, file) => {\n    const element = document.createElement(\"a\");\n    const f = new Blob([file], {type: 'text/plain'});\n    element.href = URL.createObjectURL(f);\n    element.download = filename;\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  }\n\n  const renderItems = [];\n\n  for(let i = 0;i<items.length;i+=2) {\n    if(i+1 == items.length) {\n      const item1 = items[i];\n      renderItems.push([item1])\n      break;\n    }\n    const item1 = items[i];\n    const item2 = items[i+1];\n    renderItems.push([item1, item2])\n  }\n\n  const addItem = (item) => {\n    setItems([...items, item]);\n  }\n\n\n  const onClickBtn = () => {\n    const item = {\n      name: ''\n    , price: 0\n    , colors: ''\n    , sizes: ''\n    };\n    addItem(item);\n  }\n\n  const onBaseUrlChanged = (e) => {\n    setBaseUrl(e.target.value);\n\n    let url = e.target.value;\n    let urls = url.split('/');\n    url = url.replace(urls[urls.length-1], '');\n    const headerImg = url+'/information.png';\n    setHeader(headerImg);\n}\n\n  const onClickBtn2 = async () => {\n    window.scrollTo(0,0);\n    const zip = new JSZip();\n    const frames = document.getElementsByClassName('frame')\n    for (let i=0;i<frames.length;i++) {\n      const e = frames[i];\n      const canvas = await html2canvas(e\n      , {\n        allowTaint: true\n        , useCORS: true\n        , letterRendering: 1\n        , width: 360\n        , height: 660\n        , scale: 2.167\n        , scrollX: 0\n        , scrollY: 0\n      })\n\n      const img = canvas.toDataURL('image/jpeg').split('base64,')[1];\n      zip.folder('card').file(`item${i+1}.jpg`, img, {base64: true});\n    }\n\n    const head = \n    `<!DOCTYPE html>\n    <html lang=\"ko\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <style>\n        * {\n          margin:0;\n          padding:0;\n          font-size: 0;\n      }\n      .frame {\n          position: relative;\n          width: 48vw;\n          height: 85vw;\n      }\n      .frame:hover > :not(.show_detail) {\n          opacity: 0.5;\n      }\n      .frame:hover > .show_detail {\n          visibility: visible;\n      }\n      .show_detail {\n          position: absolute;\n          top: 12vw;\n          width: 48vw;\n          height: 48vw;\n          font-size: 4vw;\n          text-align: center;\n          font-weight: bold;\n          padding-top: 4vw;\n          border-radius: 2.6vw;\n          color: rgb(51, 51, 51);\n          visibility: hidden;\n          z-index: 10;\n          cursor: default;\n          -ms-user-select: none; \n          -moz-user-select: -moz-none; \n          -webkit-user-select: none; \n          -khtml-user-select: none; \n          user-select:none;\n      }\n      .card {\n          object-fit: cover;\n          width: 47.2vw;\n      }\n        </style>\n        <body>\n            <center>\n                <img src=\"${header}\" width=\"100%\" border=\"0\"></img>\n                <br>\n                <img src=\"http://ai.esmplus.com/jin465/detail.jpg\" width=\"100%\" border=\"0\"></img>\n                <br><br>\n                <table>\n                    <tbody>\n                    `;\n\n                    for(const idx in items) {\n                      const item = items[idx];\n                      \n                      console.log(`${idx}, ${item.name}, ${item.price}, ${item.colors}, ${item.sizes}`);\n                    }\n        let body = ''\n        for(let i = 0;i<renderItems.length;i++) {\n          const r = renderItems[i];\n          body += '<tr>'\n          for(let j = 0;j<r.length;j++) {\n            const iid = 2*i+j+1;\n            body += '<td>'\n            const e = r[j];\n            body +=\n            `<div class=\"frame\" onclick=\"window.open(this.getAttribute('href'), '', 'width=800, height=10000, scrollbars, resizable, toolbar=no')\"  \n            href=\"${baseUrl}/html/item${iid}.html\"> \n                <div class=\"show_detail\">클릭 시<br/>상품 상세정보가<br/>나타납니다.</div>\n                <img class=\"card\" \n                src='${baseUrl}/card/item${iid}.jpg' />\n            </div>`;\n            body += '</td>'\n\n            const htmlFile = \n            `<!DOCTYPE html>\n            <html lang=\"ko\">\n            <head>\n                <meta charset=\"UTF-8\">\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n                <title>${e.name}</title>\n            </head>\n            <body>\n                <style>\n                    body {\n                        margin: 0;\n                        padding: 0;\n                        text-align: center;\n                    }\n                </style>\n                <img src='${baseUrl}/item${iid}/detail.jpg' width='100%' alt='${e.name}'>\n            </body>\n            </html>`;\n            zip.folder('html').file(`item${iid}.html`, htmlFile);\n            // downloadFile(`item${iid}.html`, htmlFile);\n          }\n          if(r.length == 1) {\n            body += '<td></td>'\n          }\n          body += '</tr>'\n        }\n        const foot = \n            `</tbody>\n          </table>\n        </center>\n      </body>\n    </html>`\n\n    const html = head+body+foot;\n    zip.file(`main.html`, html);\n    // downloadFile(`main.html`, html);\n    zip.generateAsync({type: 'blob'})\n    .then((blob) => {\n      downloadFile('Orange.zip', blob);\n    })\n    // console.log(html);\n  }\n\n  let id = 0;\n  return (\n    <div>\n      <div className=\"topBar\">\n    <p className=\"txt\">기본 주소 : </p>\n    <input className='baseUrl' value={baseUrl} onChange={onBaseUrlChanged}></input>\n    <button className=\"add\" onClick={onClickBtn}>추가</button>\n      <button className=\"download\" onClick={onClickBtn2}>다운로드</button>\n      </div>\n      <center>\n      <table>\n          {\n          renderItems.map(\n            (r) => {\n              return <tr>\n              {r.map(e => <td><Item id={++id} item={e} states={states}/></td>\n              )}\n              </tr>\n            }\n          )\n        }\n      </table>\n      </center>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
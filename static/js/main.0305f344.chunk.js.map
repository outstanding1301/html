{"version":3,"sources":["Item.js","App.js","serviceWorker.js","index.js"],"names":["Item","props","href","id","item","states","baseUrl","items","setItems","forceUpdate","useState","name","setName","price","setPrice","colors","setColors","sizes","setSizes","React","updateState","forceUpdate2","useCallback","setItem","length","className","style","position","width","height","background","onClick","temp","splice","its","alt","src","window","open","lpad","value","onChange","e","target","toLocaleString","s","startsWith","substring","val","parseInt","replace","App","setBaseUrl","renderItems","i","item1","push","item2","display","top","zIndex","textAlign","margin","border","addItem","zip","JSZip","idx","console","log","body","r","j","iid","htmlFile","folder","file","html","generateAsync","type","then","blob","filename","element","document","createElement","f","Blob","URL","createObjectURL","download","appendChild","click","downloadFile","map","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"4MAuIeA,MApIf,SAAcC,GAAQ,IAqBEC,EApBfC,EAAoBF,EAApBE,GAAIC,EAAgBH,EAAhBG,KADQ,GAG+BC,EAFvBJ,EAAVI,UAERC,EAHU,EAGVA,QAASC,EAHC,EAGDA,MAAOC,EAHN,EAGMA,SAAUC,EAHhB,EAGgBA,YAHhB,EAKOC,mBAASN,EAAKO,MALrB,mBAKVA,EALU,KAKJC,EALI,OAMSF,mBAASN,EAAKS,OANvB,mBAMVA,EANU,KAMHC,EANG,OAOWJ,mBAASN,EAAKW,QAPzB,mBAOVA,EAPU,KAOFC,EAPE,OAQSN,mBAASN,EAAKa,OARvB,mBAQVA,EARU,KAQHC,EARG,OAUOC,IAAMT,WAArBU,EAVQ,oBAWXC,EAAeC,uBAAY,kBAAMF,EAAY,MAAK,IAgBlDG,EAAU,WACTpB,GAAMI,EAAMiB,SAGfpB,EAAOG,EAAMJ,GACbS,EAAQR,EAAKO,MACbG,EAASV,EAAKS,OACdG,EAAUZ,EAAKW,QACfG,EAASd,EAAKa,SAqEpB,OACE,yBAAKQ,UAAU,SACf,4BAAQC,MAAO,CAACC,SAAU,WAAYC,MAAM,OAAQC,OAAO,OAAQC,WAAW,WAAYC,QA7FvE,WACf,IAAMC,EAAI,YAAOzB,GACjByB,EAAKC,OAAO9B,EAAG,EAAG,GAClBK,GAAS,SAAA0B,GAAG,OAAIF,KAChBT,IACAF,MAwFJ,gBAEI,yBAAKI,UAAU,eAAf,sBAAiC,6BAAjC,8CAA8C,6BAA9C,mCACA,yBAAKA,UAAU,SAASU,IAAKxB,EAAMyB,IAAK9B,EAAQ,QAAD,OAASH,EAAT,aAAwB4B,SAxFvD7B,EAwF2EI,EAAQ,QAAD,OAASH,EAAT,eAvF3F,WACHkC,OAAOC,KAAKpC,EAAM,GAAI,kEAuF1B,yBAAKuB,UAAU,QACX,wBAAIA,UAAU,UAAd,UACA,wBAAIA,UAAU,SAAStB,EAAGoC,KAAK,EAAG,MAClC,2BAAOd,UAAU,UAAUe,MAAO7B,EAAM8B,SAlE3B,SAACC,GAClB9B,EAAQ8B,EAAEC,OAAOH,OACjBjC,EAAMJ,EAAG,GAAK,CACVQ,KAAM+B,EAAEC,OAAOH,MACf3B,MAAOA,EACPE,OAAQA,EACRE,MAAOA,GAEXT,EAASD,GACTE,IACAY,OAyDI,yBAAKI,UAAU,eACX,wBAAIA,UAAU,oBAAd,SACA,2BAAOA,UAAU,kBAAkBe,MAAOzB,EAAQ0B,SAzDxC,SAACC,GACnB1B,EAAU0B,EAAEC,OAAOH,OACnBjC,EAAMJ,EAAG,GAAK,CACVQ,KAAMA,EACNE,MAAOA,EACPE,OAAQ2B,EAAEC,OAAOH,MACjBvB,MAAOA,GAEXT,EAASD,GACTE,IACAY,QAiDI,yBAAKI,UAAU,eACX,wBAAIA,UAAU,oBAAd,QACA,2BAAOA,UAAU,kBAAkBe,MAAOvB,EAAOwB,SAjDxC,SAACC,GAClBxB,EAASwB,EAAEC,OAAOH,OAClBjC,EAAMJ,EAAG,GAAK,CACVQ,KAAMA,EACNE,MAAOA,EACPE,OAAQA,EACRE,MAAOyB,EAAEC,OAAOH,OAEpBhC,EAASD,GACTE,IACAY,QAyCI,yBAAKI,UAAU,mBACX,wBAAIA,UAAU,aAAd,UAA6BZ,EAAM,KAAO+B,kBAC1C,wBAAInB,UAAU,MAAd,OACA,2BAAOA,UAAU,QAAQe,MAAO,SAAK3B,EAAO+B,iBAAkBH,SA1CpD,SAACC,GACnB,IAAIG,EAAIH,EAAEC,OAAOH,MACdK,EAAErB,QAAU,IAAGqB,EAAI,WACnBA,EAAEC,WAAW,YAAMD,EAAIA,EAAEE,UAAU,EAAGF,EAAErB,SAC3C,IAAMwB,EAAMC,SAASJ,EAAEK,QAAQ,MAAO,KACtCpC,EAASkC,GACTzC,EAAMJ,EAAG,GAAK,CACVQ,KAAMA,EACNE,MAAOmC,EACPjC,OAAQA,EACRE,MAAOA,GAEXT,EAASD,GACTE,IACAY,WCqPO8B,MArVf,WA2BE,IA3Bc,IAAD,EAEiBzC,mBAAS,2CAF1B,mBAENJ,EAFM,KAEG8C,EAFH,OAGa1C,mBAAS,IAHtB,mBAGNH,EAHM,KAGCC,EAHD,OAIWW,IAAMT,WAArBU,EAJI,oBAKPX,EAAca,uBAAY,kBAAMF,EAAY,MAAK,IAEjDf,EAAS,WACb,MAAO,CACLC,QAASA,EACTC,MAAOA,EACPC,SAAUA,EACVC,YAAaA,IAaX4C,EAAc,GAEZC,EAAI,EAAEA,EAAE/C,EAAMiB,OAAO8B,GAAG,EAAG,CACjC,GAAGA,EAAE,GAAK/C,EAAMiB,OAAQ,CACtB,IAAM+B,EAAQhD,EAAM+C,GACpBD,EAAYG,KAAK,CAACD,IAClB,MAEF,IAAMA,EAAQhD,EAAM+C,GACdG,EAAQlD,EAAM+C,EAAE,GACtBD,EAAYG,KAAK,CAACD,EAAOE,IAG3B,IAoRItD,EAAK,EACT,OACE,6BACE,yBAAKuB,MAAO,CAACgC,QAAS,QAAS/B,SAAU,SAAUgC,IAAK,MAAO7B,WAAY,UAAW8B,OAAQ,KAAMC,UAAW,WAA/G,8BAEF,2BAAOnC,MAAO,CAACE,MAAM,QAASC,OAAO,OAAQiC,OAAO,OAAQtB,MAAOlC,EAASmC,SA3QrD,SAACC,GACxBU,EAAWV,EAAEC,OAAOH,UA2QpB,4BAAQd,MAAO,CAACE,MAAM,OAAQC,OAAO,OAAQC,WAAW,UAAWiC,OAAO,OAAQD,OAAO,OAAQ/B,QAtRhF,YAJH,SAAC3B,GACfI,EAAS,GAAD,mBAAKD,GAAL,CAAYH,KAUpB4D,CANa,CACXrD,KAAM,GACNE,MAAO,EACPE,OAAQ,GACRE,MAAO,0BAiRT,gBACE,4BAAQS,MAAO,CAACE,MAAM,OAAQC,OAAO,OAAQC,WAAW,UAAWiC,OAAO,OAAQD,OAAO,OAAQ/B,QAzQjF,WAClB,IAAMkC,EAAM,IAAIC,IA2KA,IAAI,IAAMC,KAAO5D,EAAO,CACtB,IAAMH,EAAOG,EAAM4D,GAEnBC,QAAQC,IAAR,UAAeF,EAAf,aAAuB/D,EAAKO,KAA5B,aAAqCP,EAAKS,MAA1C,aAAoDT,EAAKW,OAAzD,aAAoEX,EAAKa,QAGvF,IADA,IAAIqD,EAAO,GACHhB,EAAI,EAAEA,EAAED,EAAY7B,OAAO8B,IAAK,CACtC,IAAMiB,EAAIlB,EAAYC,GACtBgB,GAAQ,OACR,IAAI,IAAIE,EAAI,EAAEA,EAAED,EAAE/C,OAAOgD,IAAK,CAC5B,IAAMC,EAAM,EAAEnB,EAAEkB,EAAE,EAClBF,GAAQ,OACR,IAAM5B,EAAI6B,EAAEC,GACZF,GAAI,0KAEIhE,EAFJ,qBAEwBmE,EAFxB,yOAKOnE,EALP,gBAKsBmE,EALtB,2JAQyBA,EAAKlC,KAAK,EAAG,KARtC,4DAS0BG,EAAE/B,KAT5B,wLAYsC+B,EAAE3B,OAZxC,kNAgBsC2B,EAAEzB,MAhBxC,wJAmBkCyB,EAAE7B,MAAM,KAAO+B,iBAnBjD,oHAqB6BF,EAAE7B,MAAM+B,iBArBrC,kFAyBJ0B,GAAQ,QAER,IAAMI,EAAQ,oOAMDhC,EAAE/B,KAND,oTAgBEL,EAhBF,gBAgBiBmE,EAhBjB,2CAgBuD/B,EAAE/B,KAhBzD,gDAmBdsD,EAAIU,OAAO,QAAQC,KAAnB,cAA+BH,EAA/B,SAA2CC,GAG9B,GAAZH,EAAE/C,SACH8C,GAAQ,aAEVA,GAAQ,QAEV,IAOEO,EApPI,u4KAoPQP,EAPJ,8EAQdL,EAAIW,KAAJ,YAAsBC,GAEtBZ,EAAIa,cAAc,CAACC,KAAM,SACxBC,MAAK,SAACC,IAlSY,SAACC,EAAUN,GAC9B,IAAMO,EAAUC,SAASC,cAAc,KACjCC,EAAI,IAAIC,KAAK,CAACX,GAAO,CAACG,KAAM,eAClCI,EAAQjF,KAAOsF,IAAIC,gBAAgBH,GACnCH,EAAQO,SAAWR,EACnBE,SAASd,KAAKqB,YAAYR,GAC1BA,EAAQS,QA6RNC,CAAa,aAAcZ,QAc3B,6BAEA,gCACA,+BAEI5B,EAAYyC,KACV,SAACvB,GACC,OAAO,4BACNA,EAAEuB,KAAI,SAAApD,GAAC,OAAI,4BAAI,kBAAC,EAAD,CAAMvC,KAAMA,EAAIC,KAAMsC,EAAGrC,OAAQA,gBCjU3C0F,QACW,cAA7B1D,OAAO2D,SAASC,UAEe,UAA7B5D,OAAO2D,SAASC,UAEhB5D,OAAO2D,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFjB,SAASkB,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzB,MAAK,SAAA0B,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzC,QAAQyC,MAAMA,EAAMC,a","file":"static/js/main.0305f344.chunk.js","sourcesContent":["import React, {useState, useCallback} from 'react';\nimport './Item.css';\n\nfunction Item(props) {\n    let {id, item, states} = props;\n\n    const {baseUrl, items, setItems, forceUpdate} = states();\n\n    const [name, setName] = useState(item.name);\n    const [price, setPrice] = useState(item.price);\n    const [colors, setColors] = useState(item.colors);\n    const [sizes, setSizes] = useState(item.sizes);\n\n    const [, updateState] = React.useState();\n    const forceUpdate2 = useCallback(() => updateState({}), []);\n\n    const removeItem = () => {\n        const temp = [...items];\n        temp.splice(id-1, 1);\n        setItems(its => temp);\n        setItem();\n        forceUpdate2();\n    }\n\n    const openDetail = (href) => {\n        return ()=>{\n            window.open(href, '', 'width=800, height=10000, scrollbars, resizable, toolbar=no');\n        }\n    }\n\n    const setItem = () => {\n        if(id >= items.length) {\n            return;\n        }\n        item = items[id];\n        setName(item.name);\n        setPrice(item.price);\n        setColors(item.colors);\n        setSizes(item.sizes);\n    }\n\n    const getItem = () => {\n        return {\n            name: name,\n            price: price,\n            colors: colors,\n            sizes: sizes\n        }\n    }\n\n    const onNameChange = (e) => {\n        setName(e.target.value);\n        items[id-1] = {\n            name: e.target.value,\n            price: price,\n            colors: colors,\n            sizes: sizes\n        };\n        setItems(items);\n        forceUpdate();\n        forceUpdate2();\n    }\n    const onColorChange = (e) => {\n        setColors(e.target.value);\n        items[id-1] = {\n            name: name,\n            price: price,\n            colors: e.target.value,\n            sizes: sizes\n        };\n        setItems(items);\n        forceUpdate();\n        forceUpdate2();\n    }\n    const onSizeChange = (e) => {\n        setSizes(e.target.value);\n        items[id-1] = {\n            name: name,\n            price: price,\n            colors: colors,\n            sizes: e.target.value\n        };\n        setItems(items);\n        forceUpdate();\n        forceUpdate2();\n    }\n    const onPriceChange = (e) => {\n        let s = e.target.value;\n        if(s.length <= 1) s = '￦0';\n        if(s.startsWith('￦')) s = s.substring(1, s.length);\n        const val = parseInt(s.replace(/,/gi, ''));\n        setPrice(val);\n        items[id-1] = {\n            name: name,\n            price: val,\n            colors: colors,\n            sizes: sizes\n        };\n        setItems(items);\n        forceUpdate();\n        forceUpdate2();\n    }\n\n    const test = () => {\n        forceUpdate();\n        forceUpdate2();\n    }\n  return (\n    <div className=\"frame\">\n    <button style={{position: \"absolute\", width:\"50px\", height:\"25px\", background:\"#ffffff\"}} onClick={removeItem}>삭제</button>\n    {/* <button style={{position: \"absolute\", width:\"80px\", height:\"25px\", background:\"#ffffff\", left: \"50px\"}} onClick={test}>새로고침</button> */}\n        <div className=\"show_detail\">클릭 시<br/>상품 상세정보가<br/>나타납니다.</div>\n        <img className=\"imgbox\" alt={name} src={baseUrl+`/item${id}/main.png`} onClick={openDetail(baseUrl+`/item${id}/detail.jpg`)}/>\n        <div className=\"info\">\n            <h2 className=\"option\">OPTION</h2>\n            <h2 className=\"order\">{id.lpad(3, '0')}</h2>\n            <input className=\"item_nm\" value={name} onChange={onNameChange}></input>\n            <div className=\"item_option\">\n                <h4 className=\"item_option_type\">COLOR</h4>\n                <input className=\"item_option_val\" value={colors} onChange={onColorChange}></input>\n            </div>\n            <div className=\"item_option\">\n                <h4 className=\"item_option_type\">SIZE</h4>\n                <input className=\"item_option_val\" value={sizes} onChange={onSizeChange}></input>\n            </div> \n            <div className=\"price_container\">\n                <h3 className=\"old_price\">￦{(price+10000).toLocaleString()}</h3>\n                <h3 className=\"to\"> > </h3>\n                <input className=\"price\" value={'￦'+(price).toLocaleString()} onChange={onPriceChange}></input>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default Item;","import React, { useState, useCallback } from 'react';\nimport JSZip from 'jszip';\nimport Item from './Item';\n\nfunction App() {\n\n  const [baseUrl, setBaseUrl] = useState('http://ai.esmplus.com/jin465/summer_set'); // 기본 주소\n  const [items, setItems] = useState([]);\n  const [, updateState] = React.useState();\n  const forceUpdate = useCallback(() => updateState({}), []);\n\n  const states = () => {\n    return {\n      baseUrl: baseUrl,\n      items: items,\n      setItems: setItems,\n      forceUpdate: forceUpdate\n    }\n  }\n\n  const downloadFile = (filename, file) => {\n    const element = document.createElement(\"a\");\n    const f = new Blob([file], {type: 'text/plain'});\n    element.href = URL.createObjectURL(f);\n    element.download = filename;\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  }\n\n  const renderItems = [];\n\n  for(let i = 0;i<items.length;i+=2) {\n    if(i+1 == items.length) {\n      const item1 = items[i];\n      renderItems.push([item1])\n      break;\n    }\n    const item1 = items[i];\n    const item2 = items[i+1];\n    renderItems.push([item1, item2])\n  }\n\n  const addItem = (item) => {\n    setItems([...items, item]);\n  }\n\n  const onClickBtn = () => {\n    const item = {\n      name: ''\n    , price: 0\n    , colors: ''\n    , sizes: '110,120,130,140,150'\n    };\n    addItem(item);\n  }\n\n  const onBaseUrlChanged = (e) => {\n    setBaseUrl(e.target.value);\n}\n\n  const onClickBtn2 = () => {\n    const zip = new JSZip();\n    const head = \n    `<!DOCTYPE html>\n    <html lang=\"ko\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"Viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta name=\"HandheldFriendly\" content=\"true\" />\n        <meta name=\"MobileOptimized\" content=\"320\" />\n        <style>\n            body {\n            font-family: \"Noto Sans KR\", sans-serif !important;\n            }\n            .frame {\n                position: relative;\n                width: 360px;\n                height: 635px;\n                border: 1px solid #7e7e7eab;\n            }\n            .frame:hover > :not(.show_detail) {\n                opacity: 0.5;\n            }\n            .frame:hover > .show_detail {\n                visibility: visible;\n            }\n            .show_detail {\n                position: absolute;\n                top: 90px;\n                width: 360px;\n                height: 360px;\n                font-size: 30px;\n                text-align: center;\n                font-weight: bold;\n                padding-top: 30px;\n                border-radius: 20px;\n                color: rgb(51, 51, 51);\n                visibility: hidden;\n                z-index: 10;\n                cursor: default;\n                -ms-user-select: none; \n                -moz-user-select: -moz-none; \n                -webkit-user-select: none; \n                -khtml-user-select: none; \n                user-select:none;\n            }\n            .imgbox {\n                object-fit: cover;\n                width: 354px;\n                height: 354px;\n                margin: 2px;\n                border: 1px solid #aaaaaa8e;\n            }\n            .option {\n                display: inline-block;\n                padding: 0;\n                margin: 0;\n                margin-left: 0px;\n                margin-top: -5px;\n                font-size: 35px;\n                color: #ff6f6f;\n                vertical-align: top;\n                letter-spacing: -3px;\n                padding-right: 5px;\n                border: 3px solid #ff6f6f;\n            }\n            .order {\n                display: inline-block;\n                padding: 3px;\n                margin: 0;\n                margin-left: -5px;\n                margin-top: -5px;\n                font-size: 35px;\n                color: white;\n                vertical-align: top;\n                background-color: #ff6f6f;\n            }\n            .item_nm {\n                display: block;\n                margin: 0;\n                padding: 0;\n                font-size: 25px;\n                margin-top: 10px;\n                letter-spacing: -2px;\n                margin-bottom: 10px;\n                margin-left: 10px;\n                color: #292929;\n            }\n            .item_option {\n                display: block;\n                margin-left: 10px;\n            }\n            .item_option_type {\n                display: inline-block;\n                color: #ff6f6f;\n                width: 60px;\n                margin: 0;\n                padding: 0;\n                font-size: 15px;\n            }\n            .item_option_val {\n                display: inline-block;\n                color: #5a5a5a;\n                width: 270px;\n                margin: 0px;\n                padding: 0px;\n                white-space: normal;\n                vertical-align: top;\n                font-size: 15px;\n            }\n            .price_container {\n                display: block;\n                margin: 0;\n                padding: 0;\n                margin-top: 30px;\n                text-align: center;\n            }\n            .old_price {\n                display: inline-block;\n                margin: 0;\n                padding: 0;\n                vertical-align: middle;\n                color: #5a5a5a;\n                text-decoration: line-through;\n                font-size: 20px;\n            }\n            .to {\n                display: inline-block;\n                margin: 0;\n                padding: 0;\n                margin-left: 10px;\n                margin-right: 10px;\n                vertical-align: middle;\n                font-size: 30px;\n            }\n            .price {\n                display: inline-block;\n                margin: 0;\n                padding: 0;\n                vertical-align: middle;\n                padding-left: 5px;\n                padding-right: 5px;\n                font-size: 30px;\n                color: #17aa2b;\n                border: 3px solid #17aa2b;\n                animation-name: price_color;\n                animation-duration: .5s;\n                animation-iteration-count: infinite;\n                animation-direction: alternate;\n            }\n    \n            @keyframes price_color {\n                from {\n                    color: #17aa2b;\n                    border: 3px solid #17aa2b;\n                }\n                to {\n                    color: #2af345;\n                    border: 3px solid #2af345;\n                }\n            }\n        </style>\n        <body>\n            <center>\n                <img src=\"http://ai.esmplus.com/jin465/information/information.png\" border=\"0\"></a>\n                <br>\n                <img src=\"http://ai.esmplus.com/jin465/information2/detail.jpg\" border=\"0\"></a>\n                <br><br>\n                <table>\n                    <tbody>\n                    `;\n\n                    for(const idx in items) {\n                      const item = items[idx];\n                      \n                      console.log(`${idx}, ${item.name}, ${item.price}, ${item.colors}, ${item.sizes}`);\n                    }\n        let body = ''\n        for(let i = 0;i<renderItems.length;i++) {\n          const r = renderItems[i];\n          body += '<tr>'\n          for(let j = 0;j<r.length;j++) {\n            const iid = 2*i+j+1;\n            body += '<td>'\n            const e = r[j];\n            body +=\n            `<div class=\"frame\" onclick=\"window.open(this.getAttribute('href'), '', 'width=800, height=10000, scrollbars, resizable, toolbar=no')\"  \n            href=\"${baseUrl}/html/item${iid}.html\"> \n                <div class=\"show_detail\">클릭 시<br/>상품 상세정보가<br/>나타납니다.</div>\n                <img class=\"imgbox\" \n                src='${baseUrl}/item${iid}/main.png' />  \n                <div class=\"info\">\n                    <h2 class=\"option\">OPTION</h2>\n                    <h2 class=\"order\">${(iid).lpad(3, '0')}</h2>  \n                    <h3 class=\"item_nm\">${e.name}</h3>  \n                    <div class=\"item_option\">\n                        <h4 class=\"item_option_type\">COLOR</h4>\n                        <h4 class=\"item_option_val\">${e.colors}</h4> \n                    </div>\n                    <div class=\"item_option\">\n                        <h4 class=\"item_option_type\">SIZE</h4>\n                        <h4 class=\"item_option_val\">${e.sizes}</h4> \n                    </div> \n                    <div class=\"price_container\">\n                        <h3 class=\"old_price\">￦${(e.price+10000).toLocaleString()}</h3> \n                        <h3 class=\"to\"> > </h3>\n                        <h3 class=\"price\">￦${e.price.toLocaleString()}</h3> \n                    </div>\n                </div>\n            </div>`;\n            body += '</td>'\n\n            const htmlFile = \n            `<!DOCTYPE html>\n            <html lang=\"ko\">\n            <head>\n                <meta charset=\"UTF-8\">\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n                <title>${e.name}</title>\n            </head>\n            <body>\n                <style>\n                    body {\n                        margin: 0;\n                        padding: 0;\n                        text-align: center;\n                    }\n                </style>\n                <img src='${baseUrl}/item${iid}/detail.jpg' width='780px' alt='${e.name}'>\n            </body>\n            </html>`;\n            zip.folder('html').file(`item${iid}.html`, htmlFile);\n            // downloadFile(`item${iid}.html`, htmlFile);\n          }\n          if(r.length == 1) {\n            body += '<td></td>'\n          }\n          body += '</tr>'\n        }\n        const foot = \n            `</tbody>\n          </table>\n        </center>\n      </body>\n    </html>`\n\n    const html = head+body+foot;\n    zip.file(`main.html`, html);\n    // downloadFile(`main.html`, html);\n    zip.generateAsync({type: 'blob'})\n    .then((blob) => {\n      downloadFile('Orange.zip', blob);\n    })\n    // console.log(html);\n  }\n\n  // <img src='http://ai.esmplus.com/jin465/information/information.png'/>\n  // <img src='http://ai.esmplus.com/jin465/information2/detail.jpg'/>\n  let id = 0;\n  return (\n    <div>\n      <div style={{display: 'block', position: 'sticky', top: '0px', background: '#eeeeee', zIndex: '20', textAlign: 'center'}}>\n    기본 주소 : \n    <input style={{width:'500px', height:'30px', margin:'3px'}} value={baseUrl} onChange={onBaseUrlChanged}></input>\n    <button style={{width:\"80px\", height:\"30px\", background:\"#74a7ff\", border:'none', margin:'3px'}} onClick={onClickBtn}>추가</button>\n      <button style={{width:\"80px\", height:\"30px\", background:\"#ff8874\", border:'none', margin:'3px'}} onClick={onClickBtn2}>다운로드</button>\n      </div>\n      <center>\n      <table>\n          {\n          renderItems.map(\n            (r) => {\n              return <tr>\n              {r.map(e => <td><Item id={++id} item={e} states={states}/></td>\n              )}\n              </tr>\n            }\n          )\n        }\n      </table>\n      </center>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}